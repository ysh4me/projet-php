version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    volumes:
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      PHP_INI_SCAN_DIR: "/usr/local/etc/php/conf.d"
    env_file:
      - .env.production
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  webserver:
    image: nginx:latest
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.prod.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./storage/logs/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.prod.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge 